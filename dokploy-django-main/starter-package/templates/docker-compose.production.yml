# =================================================================
# DOCKER COMPOSE - PRODUCTION WITH EXTERNAL DATABASE
# =================================================================
# This is a reference for local testing that mimics production
# NOT used by Dokploy (Dokploy uses Dockerfile directly)
# =================================================================
# Usage:
#   docker-compose -f docker-compose.production.yml up -d
# =================================================================

version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django-app-prod
    restart: unless-stopped

    ports:
      - "8001:8001"

    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_URL=${DATABASE_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}

    # Use external database - no depends_on
    networks:
      - app-network

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge

# =================================================================
# NOTES:
# =================================================================
# - This uses external DATABASE_URL (no local PostgreSQL)
# - Environment variables loaded from .env file
# - Create .env file based on .env.production.template
# - In production (Dokploy), env vars are set in UI
# =================================================================
